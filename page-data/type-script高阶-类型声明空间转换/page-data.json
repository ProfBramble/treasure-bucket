{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/type-script高阶-类型声明空间转换","result":{"data":{"post":{"__typename":"MdxPost","slug":"/type-script高阶-类型声明空间转换","title":"TypeScript高阶——类型声明空间转换","date":"24.12.2020","tags":[{"name":"typescript","slug":"typescript"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"TypeScript高阶——类型声明空间转换\",\n  \"date\": \"2020-12-24T00:00:00.000Z\",\n  \"tags\": [\"typescript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u672C\\u7AE0\\u8282\\u4E3B\\u8981\\u4ECB\\u7ECD \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \" \\u4E2D\\u7C7B\\u578B\\u58F0\\u660E\\u7A7A\\u95F4\\u7684\\u4E00\\u4E9B\\u5947\\u6DEB\\u6280\\u5DE7\\uFF0C\\u540C\\u65F6\\u4E5F\\u662F\\u5BF9\\u81EA\\u8EAB\\u5B66\\u4E60\\u505A\\u4E00\\u4E2A\\u9636\\u6BB5\\u6027\\u7684\\u8BB0\\u5F55\\u3002\\u4EBA\\u4EEC\\u4E3A\\u4E86\\u5728\\u65E5\\u5E38\\u5DE5\\u4F5C\\u4E2D\\u63D0\\u6548\\uFF0C\\u53D1\\u660E\\u4E86\\u5404\\u79CD\\u6982\\u5FF5\\uFF0C\\u5728\\u524D\\u7AEF\\u5F00\\u53D1\\u7684\\u89C6\\u56FE\\u4E2D\\u53D1\\u660E\\u4E86 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u7EC4\\u4EF6\"), \" \\u6982\\u5FF5\\uFF0CReact \\u4E2D\\u4E3A\\u4E86\\u63D0\\u53D6\\u516C\\u5171\\u7684\\u4E1A\\u52A1\\u903B\\u8F91\\uFF0C\\u63A8\\u51FA\\u4E86 React Hook\\uFF0C\\u540C\\u65F6\\u4E5F\\u4E3A\\u63A8\\u8FDB FP \\u53D1\\u5C55\\u4F5C\\u51FA\\u4E86\\u8D21\\u732E\\uFF0C\\u800C TypeScript \\u7684\\u666E\\u53CA\\uFF0C\\u662F\\u4E0D\\u662F\\u4E5F\\u53EF\\u4EE5\\u6709\\u63D0\\u53D6\\u516C\\u5171 type \\u7684\\u8BBE\\u5B9A\\u5462\\uFF1F\\u672C\\u6587\\u5C31\\u9488\\u5BF9\\u516C\\u5171 type \\u7684\\u5E94\\u7528\\u8FDB\\u884C\\u63A2\\u8BA8\\u3002\")), mdx(\"p\", null, \"\\u5982\\u679C\\u4F60\\u89C9\\u5F97\\u672C\\u6587\\u7406\\u89E3\\u8FC7\\u4E8E\\u5403\\u529B\\uFF0C\\u7B14\\u8005\\u5EFA\\u8BAE\\u8FD8\\u662F\\u5148\\u5BF9 TypeScript \\u505A\\u4E00\\u4E2A\\u7CFB\\u7EDF\\u7684\\u5B66\\u4E60\\uFF0C\\u518D\\u56DE\\u8FC7\\u5934\\u6765\\u8FDB\\u884C\\u9605\\u8BFB\\u3002\"), mdx(\"h4\", null, \"\\u5143\\u7956\\u8F6C\\u8054\\u5408\\u7C7B\\u578B\"), mdx(\"h5\", null, \"\\u65B9\\u6CD5 1\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"\\ntype ElementOf<T> = T extends Array<infer E> ? E : never;\\n\\ntype TTuple = [string, number];\\n\\ntype ToUnion = ElementOf<TTuple>; // string | number\\n\")), mdx(\"h5\", null, \"\\u65B9\\u6CD5 2\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type TTuples = [string, number];\\n\\ntype Res = TTuples[number]; // string | number\\n\")), mdx(\"p\", null, \"\\u6E90\\u81EA \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/44480644/string-union-to-string-array/45486495#45486495\"\n  }, \"stackoverflow\"), \" \\uFF0C\\u8FD9\\u4E2A\\u6BD4\\u8F83\\uD83D\\uDC02\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"number\"), \"\\u53EF\\u4EE5\\u7406\\u89E3\\u4E3A\\u8BFB\\u53D6\\u6570\\u7EC4\\u7684\\u5143\\u7D20\\uFF0C\\u56E0\\u6B64\\u53EF\\u4EE5\\u628A\\u6570\\u7EC4\\u7684\\u6BCF\\u4E00\\u4E2A\\u5143\\u7D20\\u5747\\u53D8\\u6210\\u8054\\u5408\\u7C7B\\u578B\\u3002\"), mdx(\"h4\", null, \"\\u83B7\\u53D6\\u51FD\\u6570\\u7C7B\\u578B\"), mdx(\"h5\", null, \"\\u83B7\\u53D6\\u51FD\\u6570\\u7684\\u8FD4\\u56DE\\u503C\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type ReturnType<T> = T extends (...args: any[]) => infer P ? P : any;\\n\\ntype Func = () => User;\\ntype Test = ReturnType<Func>; // User\\n\")), mdx(\"h5\", null, \"\\u83B7\\u53D6\\u51FD\\u6570\\u7684\\u53C2\\u6570\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type ReturnType<T> = T extends (...args: infer P) => any ? P : any;\\n\\ntype Func = () => User;\\ntype Test = ReturnType<Func>; // User\\n\")), mdx(\"p\", null, \"\\u4EE5 class \\u4F5C\\u4E3A\\u4F8B\\u5B50,\\u52A0\\u4E0A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"new\"), \" \\u4FEE\\u9970\\u7B26\\u5373\\u53EF\\u3002\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"// \\u83B7\\u53D6\\u53C2\\u6570\\u7C7B\\u578B\\ntype ConstructorParameters<T extends new (...args: any[]) => any> = T extends new (...args: infer P) => any\\n  ? P\\n  : never;\\n\\n// \\u83B7\\u53D6\\u5B9E\\u4F8B\\u7C7B\\u578B\\ntype InstanceType<T extends new (...args: any[]) => any> = T extends new (...args: any[]) => infer R ? R : any;\\n\\nclass TestClass {\\n  constructor(public name: string, public age: number) {}\\n}\\n\\ntype Params = ConstructorParameters<typeof TestClass>; // [string, number]\\n\\ntype Instance = InstanceType<typeof TestClass>; // TestClass\\n\")), mdx(\"h4\", null, \"\\u8054\\u5408\\u7C7B\\u578B\\u8F6C\\u4EA4\\u53C9\\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type Intersect<T> = (T extends any ? ((x: T) => 0) : never) extends ((x: infer R) => 0) ? R : never\\n\\ntype EX1 = Intersect<{a:1} | {b:1}> // {a:1} & {b:1}\\n\\ntype EX2 = Intersect<[1,2] | string> // [1,2] & string\\n\")), mdx(\"p\", null, \"\\u8FD9\\u91CC\\u4E3B\\u8981\\u662F\\u5206\\u4E3A\\u4E24\\u6B65\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9047\\u5230\\u5165\\u53C2\\u4E3A\\u8054\\u5408\\u7C7B\\u578B\\u65F6\\uFF0Cts\\u6761\\u4EF6\\u4F1A\\u8FDB\\u884C\\u62C6\\u5206\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(T extends any ? ((x: T) => 0) : never)\"), \" \\u4F1A\\u62C6\\u5206\\u6210\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"(T1 extends any ? ((x: T) => 0) : never) | (T2 extends any ? ((x: T) => 0) : never) \")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u7B2C\\u4E8C\\u9636\\u6BB5\\u540C\\u6837\\u662F\\u8054\\u5408\\u7C7B\\u578B\\uFF0C\\u4F46\\u662F\\u7531\\u4E8E\\u51FD\\u6570\\u53C2\\u6570\\u4F1A\\u8FDB\\u884C\\u9006\\u53D8\\uFF0C\\u8BE6\\u60C5\\u89C1 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"subtyping\"), \" \\u7AE0\\u8282\\uFF08\\u5F85\\u66F4\\u65B0\\uFF09\\uFF0C\\u6240\\u4EE5\\u6700\\u540E\\u5F97\\u5230\\u7684\\u662F\\u4EA4\\u53C9\\u7C7B\\u578B\\u3002\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"((x: T1) => 0) | ((x: T2) => 0) extends ((x: infer R) => 0) ? R : never  \"))), mdx(\"h4\", null, \"\\u6A21\\u62DF\\u6570\\u7EC4\\u64CD\\u4F5C\"), mdx(\"h5\", null, \"Shift\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type ShiftAction<T extends any[]> = T extends [any, ...infer R ] ? R : never\\n\\ntype tuple = ['vue', 'react', 'angular'];\\n\\ntype resultWithShift = ShiftAction<tuple> // [\\\"react\\\", \\\"angular\\\"]\\n\")), mdx(\"h5\", null, \"unshift\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type UnShiftAction<T extends any[], A > = T extends [...infer R ] ? [A,...R] : never\\n\\ntype tuple = ['vue', 'react', 'angular'];\\n\\ntype resultWithUnShift = UnShiftAction<tuple,'jquery'> // [\\\"jquery\\\", \\\"vue\\\", \\\"react\\\", \\\"angular\\\"]\\n\")), mdx(\"h5\", null, \"push\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type AnyObject = { [K in keyof any]: any; };\\n\\ntype UnShiftAction<T extends any[], A  > = T extends [...infer R ] ? [A,...R] : never\\n\\ntype ReplaceValByOwnKey<T, S extends AnyObject> = { [P in keyof T]: S[P] };\\n\\ntype PushAction<T extends any[], E > = ReplaceValByOwnKey<UnShiftAction<T, any>, T & { [k: string]: E }>;\\n\\ntype tuple = ['vue', 'react', 'angular'];\\n\\ntype resultWithPush = PushAction<tuple,'jquery'> // [\\\"vue\\\", \\\"react\\\", \\\"angular\\\", \\\"jquery\\\"]\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u9996\\u5148\\u8981\\u628A\\u5143\\u7956\\u7684\\u957F\\u5EA6\\u589E\\u52A0\\u4E00\\u4E2A\\u5355\\u4F4D\\uFF0C\\u6240\\u4EE5\\u8FD9\\u91CC\\u5C31\\u76F4\\u63A5\\u8C03\\u7528\\u4E86shift\\u65B9\\u6CD5\\uFF0C\\u7136\\u540E\\u628A\\u5143\\u7956\\u548C\\u7D22\\u5F15\\u7B7E\\u540D\\u8FDB\\u884C\\u914D\\u5408\\uFF0C\\u672C\\u8EAB\\u5143\\u7956\\u4E5F\\u662F\\u5BF9\\u8C61\\uFF0C\\u6240\\u4EE5\\u5C31\\u548C\\u5E73\\u65F6\\u5199\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"interface\"), \"\\u5B9A\\u4E49\\u7684\\u65F6\\u4E00\\u81F4\\uFF0C\\u806A\\u660E\\u7684\\u8BFB\\u8005\\u4E5F\\u80AF\\u5B9A\\u53D1\\u73B0\\u4E86\\u53EA\\u8981\\u65B0\\u5143\\u7956\\u7684\\u957F\\u5EA6\\u5927\\u4E8E\\u539F\\u5143\\u7956\\uFF0C\\u65E0\\u8BBA\\u5927\\u591A\\u5C11\\u4E2A\\uFF0C\\u540E\\u9762\\u586B\\u5145\\u7684\\u5185\\u5BB9\\u4E5F\\u5FC5\\u5B9A\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"E\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u4ECE\\u65B0\\u5143\\u7956\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"T\"), \"\\u4E2D\\u53D6\\u51FAkey\\uFF0C\\u628AS\", \"[P]\", \"\\u7684\\u6570\\u636E\\u4E00\\u4E2A\\u4E2A\\u586B\\u5165\\uFF0C\\u539F\\u5143\\u7956\\u6570\\u636E\\u586B\\u5B8C\\u540E\\uFF0C\\u5C31\\u4F1A\\u542F\\u52A8\\u7D22\\u5F15\\u7B7E\\u540D\\uFF0C\\u6DFB\\u52A0\\u5185\\u5BB9\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"E\"))), mdx(\"h5\", null, \"pop\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type AnyObject = { [K in keyof any]: any; };\\n\\ntype ShiftAction<T extends any[]> = T extends [any, ...infer R ] ? R : never\\n\\ntype ReplaceValByOwnKey<T, S extends AnyObject> = { [P in keyof T]: S[P] };\\n\\ntype PopAction<T extends any[]> = ReplaceValByOwnKey<ShiftAction<T>, T>;\\n\\ntype tuple = ['vue', 'react', 'angular'];\\n\\ntype resultWithPop = PopAction<tuple> // [\\\"vue\\\", \\\"react\\\"]\\n\")), mdx(\"h5\", null, \"concat\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"type ShiftAction<T extends any[]> = T extends [any, ...infer R ] ? R : never\\ntype ConcatAction<T1 extends any[], T2 extends any[], T extends any[] = T2 > = {\\n  0: ConcatAction<ShiftAction<T1>, [], [ T1[0], ...T ]>,\\n  1: T\\n}[T1 extends [] ? 1 : 0]\\n\\ntype tuple1 = ['vue', 'react', 'angular'];\\n\\ntype tuple2 = ['lodash', 'dayjs', 'eslint'];\\n\\ntype resultWithConcat = ConcatAction<tuple1,tuple2> // [\\\"angular\\\", \\\"react\\\", \\\"vue\\\", \\\"lodash\\\", \\\"dayjs\\\", \\\"eslint\\\"]\\n\")), mdx(\"p\", null, \"\\u8FD9\\u91CC\\u4F7F\\u7528\\u4E86\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\u9012\\u5F52\\u65B9\\u6CD5\\uFF0C\\u4E3B\\u8981\\u601D\\u8DEF\\u662F\\u9700\\u8981\\u4E00\\u4E2A\\u5DE5\\u5177\\u4EBA\\u5BB9\\u5668\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T\"), \"\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T\"), \"\\u7684\\u521D\\u59CB\\u503C\\u5C31\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"T2\"), \"\\uFF0C\\u90A3\\u4E48\\u53EA\\u8981\\u628A\\u5143\\u79561\\u7684\\u5185\\u5BB9\\u5728\\u9012\\u5F52\\u4E2D\\u6BCF\\u6B21\\u653E\\u5165\\u4E00\\u4E2A\\u5230T\\u4E2D\\uFF0C\\u5E76\\u5220\\u9664\\u5373\\u53EF\\u3002\"), mdx(\"h4\", null, \"\\u8054\\u5408\\u7C7B\\u578B\\u8F6C\\u5143\\u7956\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"// union to intersection of functions\\ntype UnionToIoF<U> =\\n    (U extends any ? (k: (x: U) => void) => void : never) extends\\n    ((k: infer I) => void) ? I : never\\n\\n// return last element from Union\\ntype UnionPop<U> = UnionToIoF<U> extends { (a: infer A): void; } ? A : never;\\ntype tests2=UnionPop<'a' | 'b' | 'c'>\\n// prepend an element to a tuple.\\ntype Prepend<U, T extends any[]> =\\n    ((a: U, ...r: T) => void) extends (...r: infer R) => void ? R : never;\\n\\ntype UnionToTuples<Union, Result extends any[]=[]> = {\\n    1: Result;\\n    0: UnionToTuples_<Union, UnionPop<Union>, Result>;\\n    // 0: UnionToTuples<Exclude<Union, UnionPop<Union>>, Prepend<UnionPop<Union>, Result>>\\n}[[Union] extends [never] ? 1 : 0];\\n\\ntype UnionToTuples_<Union, Element, Result extends any[]> =\\n    UnionToTuples<Exclude<Union, Element>, Prepend<Element, Result>>;\\n\\ntype finalResult = UnionToTuples<'a' | 'b' | 'c'>\\n\")), mdx(\"p\", null, \"\\u8FD9\\u662F\\u672C\\u4F8B\\u4E2D\\u96BE\\u5EA6\\u6700\\u9AD8\\u7684\\u4F8B\\u5B50\\u4E4B\\u4E00\\uFF0C\\u540C\\u65F6\\u4E5F\\u662F\\u6700\\u7EFC\\u5408\\u7684\\u8FD0\\u7528\\u3002\"), mdx(\"h3\", null, \"\\u7AE0\\u8282\\u5C0F\\u7ED3\\uFF1A\\u56FE\\u7075\\u5B8C\\u5907\"), mdx(\"p\", null, \"\\u5728\\u672C\\u7AE0\\u8282\\u4E2D\\uFF0C\\u6211\\u4EEC\\u5BF9 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \" \\u7C7B\\u578B\\u58F0\\u660E\\u7A7A\\u95F4\\uFF08\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\uFF09\\u6A21\\u62DF\\u4E86\\u6570\\u7EC4\\uFF0C\\u9012\\u5F52\\uFF0C\\u5224\\u65AD\\u7B49\\u65B9\\u6CD5\\uFF0C\\u5982\\u679C\\u8BFB\\u8005\\u53EF\\u4EE5\\u719F\\u7EC3\\u8FD0\\u7528\\u4EE5\\u4E0A\\u6280\\u5DE7\\uFF0C\\u90A3\\u4E48\\u9047\\u5230\\u5F88\\u591A\\u573A\\u666F\\u90FD\\u53EF\\u4EE5\\u548C\\u6C34\\u679C\\u5FCD\\u8005\\u4E00\\u6837\\u7B80\\u5355\\u5566\\u3002\\u4F46\\u8FD9\\u4E5F\\u8BA9\\u4E00\\u4E9B\\u8BFB\\u8005\\u4EA7\\u751F\\u4E86\\u601D\\u8003\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\u57FA\\u672C\\u53EF\\u4EE5\\u6A21\\u62DF\\u8BED\\u8A00\\u7684\\u6570\\u636E\\u7ED3\\u6784\\u4E0E\\u65B9\\u6CD5\\uFF0C\\u90A3\\u4E48\\u5B83\\u7A76\\u7ADF\\u80FD\\u4E0D\\u80FD\\u7B97\\u4E00\\u95E8\\u8BED\\u8A00\\u5462\\uFF1F\\u7B14\\u8005\\u601D\\u8003\\u540E\\u89C9\\u5F97\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\u867D\\u7136\\u770B\\u4E0A\\u53BB\\u662F\\u4E00\\u5957\\u6BD4\\u8F83\\u5B8C\\u5907\\u7684\\u7F16\\u7A0B\\u8BED\\u8A00\\uFF0C\\u4F46\\u662F\\u5176\\u6839\\u672C\\u65E0\\u6CD5\\u6EE1\\u8DB3\\u56FE\\u7075\\u5B8C\\u5907\\u7684\\u4E94\\u4E2A\\u6807\\u51C6\\uFF0C\\u51B5\\u4E14\\u56FE\\u7075\\u5B8C\\u5907\\u4F5C\\u4E3A\\u4E00\\u79CD\\u6570\\u5B66\\u6A21\\u578B\\u5176\\u542B\\u4E49\\u662F\\uFF1A\\u80FD\\u591F\\u89E3\\u51B3\\u6240\\u6709\\u53EF\\u8BA1\\u7B97\\u7684\\u8BA1\\u7B97\\u95EE\\u9898\\uFF1B\\u6240\\u4EE5\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Type\"), \"\\u65E0\\u6CD5\\u6210\\u4E3A\\u4E00\\u95E8 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GPL\"), \" \\uFF0C\\u4F46\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \"\\u4E0E\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \"\\u7684\\u7EC4\\u5408\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \"\\u80AF\\u5B9A\\u662F\\u4E00\\u95E8\\u56FE\\u7075\\u5B8C\\u5907\\u7684\\u8BED\\u8A00\\uFF0C\\u5B83\\u62E5\\u6709\\u53EF\\u8FDB\\u884C\\u81EA\\u4E3E\\u7684 parser\\uFF0C\\u5185\\u90E8\\u884C\\u4E3A\\u662F\\u5C06\\u81EA\\u8EAB\\u8F6C\\u6362\\u4E3A \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"JavaScript\"), \" \\u3002\\u7EFC\\u4E0A\\u6240\\u8FF0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"TypeScript\"), \"\\u4F5C\\u4E3A\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Javascript\"), \"\\u7684\\u8D85\\u96C6\\uFF0C\\u5B83\\u5F53\\u7136\\u662F\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"GPL\"), \"\\uFF0C\\u4F46\\u662F\\u672C\\u6587\\u6240\\u8FF0\\u7684\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"type\"), \"\\u5176\\u672C\\u8EAB\\u66F4\\u52A0\\u7B26\\u5408\\u5916\\u90E8\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DSL\"), \"\\u7684\\u8BBE\\u5B9A\\u3002\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"本章节主要介绍  TypeScript  中类型声明空间的一些奇淫技巧，同时也是对自身学习做一个阶段性的记录。人们为了在日常工作中提效，发明了各种概念，在前端开发的视图中发明了  组件  概念，React 中为了提取公共的业务逻辑，推出了 React Hook，同时也为推进 FP…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/type-script高阶-类型声明空间转换","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}